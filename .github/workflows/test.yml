# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Set ssh agent
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Release to GitHub Pages
        env:
          USE_SSH: true
          GIT_USER: git
        run: |
          git config --global user.email "huu.tho.ns@gmail.com"
          git config --global user.name "bachlongkocanh"

      # Runs a single command using the runners shell
      - name: Setup yarn
        run: npm install -g yarn

      - name: ENVFILE
        uses: alekangelov/secret-envfile@v1
        with:
          content: ${{ secrets.CONTENT_ENV }}
          filename: .env

      - name: Install dependencies
        run: yarn install --frozen-lockfile || { exit 1;}

      - name: Echo env file
        run: |
          cat .env

      # - name: Create env1 file
      #   run: |
      #     echo "${{ secrets.CONTENT_ENV }}" > .env1
      #     echo "${{ secrets.CONTENT_ENV2 }}" > .env1
      #     cat .env1

      # - name: Create env2 file
      #   run: |
      #     echo "${{ secrets.CONTENT_ENV2 }}" > .env2
      #     cat .env2

      # - name: Change name env
      #   run: |
      #     cp .env.example .envvv
      #     cat .envvv

      #  - name: send telegram message on push
      #   uses: appleboy/telegram-action@master
      #   with:
      #     to: ${{ secrets.CHANNEL_ID }}
      #     token: ${{ secrets.TELEGRAM_TOKEN }}
      #     message: |

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
